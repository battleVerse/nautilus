library(nautilus)
library(tidyverse)
########################
### Load in the data ###
########################
# NAUTILUS comes with three sceario data sets to investigate
if (FALSE) {
truthData=scenario1_truthData
sensorData=scenario1_sensorData
ownShip=scenario1_ownShipData
}
if (FALSE) {
truthData=scenario2_truthData
sensorData=scenario2_sensorData
ownShip=scenario2_ownShipData
}
if (TRUE) {
truthData=scenario3_truthData
sensorData=scenario3_sensorData
ownShip=scenario3_ownShipData
}
nautilus:::nautilus_interface()
library(nautilus)
library(tidyverse)
truthData=scenario3_truthData_dropout
lagData=truthData %>% group_by(targetID) %>%
mutate(deltaTime=time-lag(time),
time=as.POSIXct(time,tz="UTC",origin="1970-01-01")
) %>%
na.omit()
stdDevDropout=sd(lagData$deltaTime,na.rm=TRUE)
dropoutSummaryByTgt=lagData %>% group_by(targetID) %>%
summarize(withinSigma = sum(deltaTime<stdDevDropout),
above1Sigma = sum(deltaTime>stdDevDropout & deltaTime < 2*stdDevDropout),
above2Sigma = sum(deltaTime>2*stdDevDropout),
totalNumPoints=n())
dropoutSummaryByTgt
#### Summarize Overall ####
dropoutSummaryOverall=lagData %>% ungroup() %>%
summarize(withinSigma = sum(deltaTime<stdDevDropout),
above1Sigma = sum(deltaTime>stdDevDropout & deltaTime < 2*stdDevDropout),
above2Sigma = sum(deltaTime>2*stdDevDropout),
totalNumPoints=n())
dropoutSummaryOverall
### Summarize by Cutoff ###
myCutoff=2.5
dropoutSummaryCutoff=lagData %>% group_by(targetID) %>%
summarize(belowCutoff = sum(deltaTime<myCutoff),
aboveCutoff = sum(deltaTime>myCutoff & deltaTime < 2*myCutoff),
above2xCutoff = sum(deltaTime>2*myCutoff),
totalNumPoints=n())
dropoutSummaryCutoff
ggplot(lagData)+
geom_point(aes(x=time,y=deltaTime))+
geom_line(aes(x=time,y=deltaTime))+
geom_hline(yintercept=stdDevDropout)+
geom_hline(yintercept=stdDevDropout*2)+
facet_wrap(~targetID)+
scale_y_log10()+
xlab("Time")+
ylab("Gaps in Truth Data (s)")
nautilus:::nautilus_interface()
dropoutSummaryByTgt
dropoutSummaryByTgt=lagData %>% group_by(targetID) %>%
summarize("# Points Below Cutoff" = sum(deltaTime<cutoffTime),
"# Points Above Cutoff" = sum(deltaTime>cutoffTime & deltaTime < 2*cutoffTime),
"# Points Above 2x Cutoff" = sum(deltaTime>2*cutoffTime),
"Total # Points"=n())
dropoutSummaryByTgt
dropoutSummaryByTgt=lagData %>% group_by(targetID) %>%
summarize("# Points Below Cutoff" = sum(deltaTime<cutoffTime),
"# Points Above Cutoff" = sum(deltaTime>cutoffTime & deltaTime < 2*cutoffTime),
"# Points Above 2x Cutoff" = sum(deltaTime>2*cutoffTime),
"Total # Points"=n())
dropoutSummaryByTgt
dropoutSummaryByTgt=lagData %>% group_by(targetID) %>%
summarize("# Points Below Cutoff" = sum(deltaTime<cutoffTime),
"# Points Above Cutoff" = sum(deltaTime>cutoffTime & deltaTime < 2*cutoffTime),
"# Points Above 2x Cutoff" = sum(deltaTime>2*cutoffTime),
"Total # Points"=n())
cutoffTime==0
cutoffTime=0
### figure out the yardstick for failure ###
if (cutoffTime == 0 ){ #then we're measuring this in standard deviations
cutoffTime=sd(lagData$deltaTime,na.rm=TRUE)
}
#### Summarize by Target ####
dropoutSummaryByTgt=lagData %>% group_by(targetID) %>%
summarize("# Points Below Cutoff" = sum(deltaTime<cutoffTime),
"# Points Above Cutoff" = sum(deltaTime>cutoffTime & deltaTime < 2*cutoffTime),
"# Points Above 2x Cutoff" = sum(deltaTime>2*cutoffTime),
"Total # Points"=n())
dropoutSummaryByTgt
View(ownShip)
View(ownShip)
View(truthData)
library(nautilus)
# Load the ownship data (this is where the sensor is located)
ownShip <- scenario2_ownShipData
# Load the truth data for the targets
truthData <- scenario2_truthData
# Load the radar data
sensorData <- scenario2_sensorData
library(bookdown)
install.packages("bookdown")
?create_scel
library(scenarioMaker)
?create_scenario
?kmeans
